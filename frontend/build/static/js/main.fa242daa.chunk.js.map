{"version":3,"sources":["playback.js","pages/JoinOrCreateRoom.js","components/Players.js","pages/HostWaitingToStart.js","pages/PlayerWaitingToStart.js","components/Scores.js","pages/LeaderWaitingForGuesses.js","api.js","components/Track.js","pages/PlayerGuess.js","pages/HostMusicPlayer.js","components/RecommendedSongs.js","pages/LeaderChooseSong.js","pages/PlayerWaitingForLeader.js","pages/ShowCorrectSong.js","Game.js","components/Logo.js","components/Layout.js","App.js","registerServiceWorker.js","index.js"],"names":["SpotifyPlayer","base_config","api_endpoint","auth_endpoint","config","player_name","client_id","process","REACT_APP_CLIENT_ID","redirect_uri","window","location","origin","scopes","access_token","player","device_id","sendToLogin","this","concat","join","controls","_request","method","endpoint","params","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","onload","readyState","status","responseText","JSON","parse","err","console","log","send","stringify","switchPlayback","id","device_ids","play","uris","pause","prevTrack","nextTrack","searchAndPlay","query","then","results","tracks","items","uri","getDevices","callback","devices","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","onSpotifyPlayerAPIReady","Spotify","Player","name","getOauthToken","cb","volume","on","e","connect","JoinOrCreateRoom","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","nickname","undefined","room","onJoinAsHost","event","field","target","value","type","parseInt","setState","defineProperty","onJoinAsPlayer","_this$state","react_default","a","createElement","onChange","handleChange","bind","min","max","className","onClick","Component","Players","_ref","players","react","map","key","defaultProps","HostWaitingToStart","onStartGame","length","components_Players","PlayerWaitingToStart","Scores","scores","scoreUpdates","keys","sort","b","build_default","style","transition","transitionProperty","stepPrecision","duration","frameStyle","perc","initialValue","LeaderWaitingForGuesses","guessTimer","components_Scores","api","replace","socket","io","data","emit","search","song","encodeURIComponent","fetch","response","json","res","body","catch","disconnect","reconnect","Track","track","album","images","alt","src","url","artists","artist","PlayerGuess","_this2","trackSearch","_this3","_this$props","guessed","onGuess","currentTarget","components_Track","HostMusicPlayer","selectedDevice","time","updateDevices","playSong","newProps","songToPlay","changeDevice","device","_this4","_this$state2","correctSong","onChangeTimer","correctSongTimer","renderDevices","onSubmit","preventDefault","step","RecommendedSongs","getAudioAnalysis","onSelectSong","LeaderChooseSong","components_RecommendedSongs","PlayerWaitingForLeader","leader","ShowCorrectSong","Game","isHost","pages_HostWaitingToStart","pages_PlayerWaitingToStart","_this$props2","pages_JoinOrCreateRoom","_this$props3","isLeader","pages_HostMusicPlayer","pages_LeaderWaitingForGuesses","pages_PlayerGuess","pages_LeaderChooseSong","pages_ShowCorrectSong","pages_PlayerWaitingForLeader","_this$props4","started","renderPlay","renderWait","renderJoin","Logo","Layout","children","components_Logo","App","loading","hasHost","playing","_this2$state","score","_this2$state2","alert","objectSpread","gamestate","selectedSong","roundTime","clearInterval","guessInterval","setInterval","nick","timer","components_Layout","src_Game","startGame","n","r","joinAsPlayer","joinAsHost","guess","selectSong","sendTime","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","addEventListener","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"iMAAMA,EAAgB,CACpBC,YAAa,CACXC,aAAc,0BACdC,cAAe,0CAEjBC,OAAQ,CACNC,YAAa,uBACbC,UAAWC,8CAAYC,oBACvBC,aAAcC,OAAOC,SAASC,OAC9BC,OAAQ,CACN,YACA,sBACA,kBACA,oBACA,2BACA,+BAGJC,aAAc,KACdC,OAAQ,KACRC,UAAW,KACXC,YArBoB,WAsBlBP,OAAOC,SAAW,CAChBO,KAAKjB,YAAYE,cADD,cAAAgB,OAEFD,KAAKd,OAAOE,WAFV,iBAAAa,OAGCD,KAAKd,OAAOK,cAHb,UAAAU,OAIND,KAAKd,OAAOS,OAAOO,KAAK,QAClC,uBACA,qBACAA,KAAK,MAKXpB,EAAcqB,SAAW,CACvBC,SADuB,SACdC,EAAQC,EAAUC,GACzB,OAAO,IAAIC,QAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAM,IAAIC,eAChBD,EAAIE,KAAKR,EAAQvB,EAAcC,YAAYC,aAAesB,GAAU,GACpEK,EAAIG,iBAAiB,eAAgB,mCACrCH,EAAIG,iBAAiB,gBAArB,UAAAb,OAAgDnB,EAAcc,eAC9De,EAAII,OAAS,WACX,GAAuB,IAAnBJ,EAAIK,aAAoC,MAAfL,EAAIM,QAAiC,MAAfN,EAAIM,QACrD,IACE,IAAKN,EAAIO,aACP,OAAOT,IAETA,EAAQU,KAAKC,MAAMT,EAAIO,eACvB,MAAOG,GACPC,QAAQC,IAAIF,GACZX,MAINC,EAAIa,KAAKL,KAAKM,UAAUlB,OAG5BmB,eAvBuB,SAuBRC,GACb,OAAO3B,KAAKI,SAAS,MAAO,gBAAiB,CAAEwB,WAAY,CAACD,MAE9DE,KA1BuB,SA0BlBC,EAAMH,GACLG,EACF9B,KAAKI,SAAS,MAAd,gCAAAH,OAAqD0B,GAAM,CAAEG,SAE7D9B,KAAKI,SAAS,MAAO,uBAGzB2B,MAjCuB,WAkCrB/B,KAAKI,SAAS,MAAO,wBAEvB4B,UApCuB,WAqCrBhC,KAAKI,SAAS,OAAQ,2BAExB6B,UAvCuB,WAwCrBjC,KAAKI,SAAS,OAAQ,uBAExB8B,cA1CuB,SA0CTC,GACZnC,KAAKI,SAAS,MAAd,2BAAAH,OAAgDkC,EAAhD,uBAA4E,IAAIC,KAC9E,SAACC,GACCvD,EAAcqB,SAAS0B,KAAK,CAACQ,EAAQC,OAAOC,MAAM,GAAGC,SAI3DC,WAjDuB,SAiDZC,GACT1C,KAAKI,SAAS,MAAO,yBAAyBgC,KAAK,SAACC,GAClDK,EAASL,EAAQM,aAKvB,IAAMC,EAAOpD,OAAOC,SAASmD,KAC1BC,UAAU,GACVC,MAAM,KACNC,OAAO,SAACC,EAASC,GAChB,GAAIA,EAAM,CACR,IAAMC,EAAQD,EAAKH,MAAM,KACzBE,EAAQE,EAAM,IAAMC,mBAAmBD,EAAM,IAE/C,OAAOF,GACN,IAGLlE,EAAcc,aAAegD,EAAKhD,aAClCJ,OAAOC,SAASmD,KAAO,GASvBpD,OAAO4D,wBAA0B,WAE/BtE,EAAce,OAAS,IAAIL,OAAO6D,QAAQC,OAAO,CAC/CC,KAAMzE,EAAcI,OAAOC,YAC3BqE,cAF+C,SAEjCC,GACZA,EAAG3E,EAAcc,eAEnB8D,OAAQ,KAIV5E,EAAce,OAAO8D,GAAG,QAAS,SAACC,GAChCtC,QAAQC,IAAI,iBAAkBqC,GAC9B9E,EAAcgB,UAAY8D,EAAE9D,YAK9BhB,EAAce,OAAO8D,GAAG,uBAAwB,SAACC,GAC/CtC,QAAQC,IAAI,uBAAyB/B,OAAOoE,EAAIA,KAIlD9E,EAAce,OAAO8D,GAAG,wBAAyB,SAACC,GAChDtC,QAAQC,IAAI,wBAAyBqC,KAEvC9E,EAAce,OAAO8D,GAAG,uBAAwB,SAACC,GAC/CtC,QAAQC,IAAI,uBAAwBqC,KAEtC9E,EAAce,OAAO8D,GAAG,gBAAiB,SAACC,GACxCtC,QAAQC,IAAI,gBAAiBqC,KAE/B9E,EAAce,OAAO8D,GAAG,iBAAkB,SAACC,GACzCtC,QAAQC,IAAI,iBAAkBqC,KAIhC9E,EAAce,OAAOgE,WAGR/E,QC3FAgF,cAxDb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAjE,KAAA8D,IACjBE,EAAAC,OAAAE,EAAA,EAAAF,CAAAjE,KAAAiE,OAAAG,EAAA,EAAAH,CAAAH,GAAAO,KAAArE,KAAM+D,KACDO,MAAQ,CACXC,cAAUC,EACVC,UAAMD,GAJSR,mFAQC,IACVU,EAAiB1E,KAAK+D,MAAtBW,aACJ5F,EAAcc,cAChB8E,yCAISC,GACX,IAAMC,EAAQD,EAAME,OAAOtB,KACrBuB,EAA8B,WAAtBH,EAAME,OAAOE,KAAoBC,SAASL,EAAME,OAAOC,MAAO,IAAMH,EAAME,OAAOC,MAC/F9E,KAAKiF,SAALhB,OAAAiB,EAAA,EAAAjB,CAAA,GAAiBW,EAAQE,qCAGlB,IACCK,EAAmBnF,KAAK+D,MAAxBoB,eADDC,EAEoBpF,KAAKsE,MAAxBG,EAFDW,EAECX,KAAMF,EAFPa,EAEOb,SACd,OACEc,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACET,MAAOP,EACPiB,SAAUxF,KAAKyF,aAAaC,KAAK1F,MACjC+E,KAAK,OACLxB,KAAK,aAEP8B,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SACET,MAAOL,EACPe,SAAUxF,KAAKyF,aAAaC,KAAK1F,MACjC+E,KAAK,SACLY,IAAI,OACJC,IAAI,OACJrC,KAAK,SAEP8B,EAAAC,EAAAC,cAAA,UAAQR,KAAK,SAASc,UAAU,SAASC,QAAS,kBAAMX,EAAeZ,EAAUE,KAAjF,QAGAY,EAAAC,EAAAC,cAAA,UAAQR,KAAK,SAASc,UAAU,SAASC,QAAS,WDyDnDhH,EAAcc,cACjBd,EAAciB,gBC1DV,4BA9CuBgG,aCDzBC,EAAU,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAAS3B,EAAZ0B,EAAY1B,SAAZ,OACd4B,EAAA,qBAAKN,UAAU,WACZK,EAAQE,IAAI,SAAA7C,GAAI,OACf4C,EAAA,qBAAKE,IAAK9C,GACPA,EACD4C,EAAA,2BAAQ5C,IAASgB,GAAY,eAUrCyB,EAAQM,aAAe,CACrBJ,QAAS,GACT3B,SAAU,IAEGyB,QClBTO,EAAqB,SAAAN,GAAA,IAAG1C,EAAH0C,EAAG1C,KAAM2C,EAATD,EAASC,QAASM,EAAlBP,EAAkBO,YAAlB,OACzBnB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,wBAAAtF,OAAmBsD,IAClB2C,EAAQO,OAAS,GAChBpB,EAAAC,EAAAC,cAAA,UAAQR,KAAK,SAASc,UAAU,SAASC,QAAS,kBAAMU,MAAxD,cAIFnB,EAAAC,EAAAC,cAACmB,EAAD,CAASR,QAASA,MAStBK,EAAmBD,aAAe,CAChC/C,KAAM,GACN2C,QAAS,IAEIK,QCtBTI,EAAuB,SAAAV,GAAA,IAAG1C,EAAH0C,EAAG1C,KAAM2C,EAATD,EAASC,QAAS3B,EAAlB0B,EAAkB1B,SAAlB,OAC3Bc,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,wBAAAtF,OAAmBsD,IACnB8B,EAAAC,EAAAC,cAACmB,EAAD,CAASR,QAASA,EAAS3B,SAAUA,MAQzCoC,EAAqBL,aAAe,CAClC/C,KAAM,GACN2C,QAAS,IAEIS,yBChBTC,EAAS,SAAAX,GAAA,IAAGY,EAAHZ,EAAGY,OAAQtC,EAAX0B,EAAW1B,SAAUuC,EAArBb,EAAqBa,aAArB,OACbX,EAAA,qBAAKN,UAAU,UACZgB,GACI5C,OAAO8C,KAAKF,GACZG,KAAK,SAAC1B,EAAG2B,GAAJ,OAAUJ,EAAOI,GAAKJ,EAAOvB,KAClCc,IAAI,SAAA7C,GAAI,OACP4C,EAAA,qBAAKE,IAAK9C,GACR4C,EAAA,qBAAKN,UAAU,aACbM,EAAA,qBAAKN,UAAU,cACZtC,EACAA,IAASgB,GAAY4B,EAAA,sCAExBA,EAAA,qBAAKN,UAAU,eACbM,EAAA,yBACG5C,KAAQsD,GACPV,EAAA,cAACe,EAAA5B,EAAD,CACE6B,MAAO,CACLC,WAAY,gBACZC,mBAAoB,oCAEtBC,cAAe,EACfC,SAAU,IACVC,WAAY,SAAAC,GAAI,MAAoB,IACpCC,aAAcb,EAAOtD,GACrBuB,MAAO+B,EAAOtD,MAIpB4C,EAAA,qBAAKN,UAAU,kBACZtC,KAAQuD,GAAR,IAAA7G,OAA4B6G,EAAavD,YAa5DqD,EAAON,aAAe,CACpB/B,cAAUC,GAEGoC,QC/BAe,EAdiB,SAAA1B,GAAA,IAAGY,EAAHZ,EAAGY,OAAQC,EAAXb,EAAWa,aAAcvC,EAAzB0B,EAAyB1B,SAAUqD,EAAnC3B,EAAmC2B,WAAnC,OAC9BvC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKqC,GACLvC,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAACsC,EAAD,CAAQhB,OAAQA,EAAQtC,SAAUA,EAAUuC,aAAcA,uBCLxDgB,EAAMtI,OAAOC,SAASC,OAAOqI,QAAQ,OAAQ,QAE7CC,EAASC,IAAGH,GAclB,SAASnE,EAAGgB,EAAOjC,GACjBsF,EAAOrE,GAAGgB,EAAO,SAACuD,GAChB5G,QAAQC,IAAI,YAAaoD,EAAOuD,GAChCxF,EAASwF,KAIb,SAASC,EAAKxD,EAAOuD,EAAMxF,GACzBpB,QAAQC,IAAI,UAAWoD,EAAOuD,GAC9BF,EAAOG,KAAKxD,EAAOuD,GAGrB,SAASE,EAAOC,EAAM3F,GACpB2F,EAAOC,mBAAmBD,GAC1B/G,QAAQC,IAAI,UACZgH,MAAK,GAAAtI,OAAI6H,EAAJ,YAAA7H,OAAkBoI,IACpBjG,KAAK,SAACoG,GAEL,OADAlH,QAAQC,IAAI,SACLiH,EAASC,SAEjBrG,KAAK,SAAAsG,GAAG,OAAIhG,EAASgG,EAAIC,KAAKrG,OAAOC,SACrCqG,MAAM,SAAChF,GACNtC,QAAQC,IAAIqC,KA1BlBpE,OAAOqJ,WARP,WACEb,EAAOa,cASTrJ,OAAOsJ,UANP,WACEd,EAAOnE,WCNT,IAAMkF,EAAQ,SAAA9C,GAAA,IAAGH,EAAHG,EAAGH,QAASkD,EAAZ/C,EAAY+C,MAAZ,OACZ7C,EAAA,cAACA,EAAA,SAAD,KACG6C,GACC7C,EAAA,qBAAKN,UAAU,WAAWC,QAASA,GACjCK,EAAA,qBAAKN,UAAU,cACXmD,EAAMC,MAAMC,OAAOzC,OAAS,GAC5BN,EAAA,qBAAKgD,IAAI,YAAYC,IAAKJ,EAAMC,MAAMC,OAAOF,EAAMC,MAAMC,OAAOzC,OAAS,GAAG4C,MAE9ElD,EAAA,qBAAKN,UAAU,aACbM,EAAA,qBAAKN,UAAU,aACZ,IACAmD,EAAMzF,KACN,KAEH4C,EAAA,qBAAKN,UAAU,gBACZ,IACAmD,EAAMM,QAAQlD,IAAI,SAAAmD,GAAM,OACvBpD,EAAA,sBAAME,IAAKkD,EAAOhG,MACfgG,EAAOhG,KACP,OAGJ,UAYfwF,EAAMzC,aAAe,CACnBR,QAAS,cAEIiD,QCqCAS,cAzEb,SAAAA,EAAYzF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAjE,KAAAwJ,IACjBxF,EAAAC,OAAAE,EAAA,EAAAF,CAAAjE,KAAAiE,OAAAG,EAAA,EAAAH,CAAAuF,GAAAnF,KAAArE,KAAM+D,KAEDO,MAAQ,CACXQ,MAAO,GACPzC,QAAS,IALM2B,wEASVc,GACP9E,KAAKiF,SAAS,CACZH,UAGF9E,KAAKoI,OAAOtD,kCAGPA,GAAO,IAAA2E,EAAAzJ,KACZ,GAAI8E,EAAM2B,OAAS,EACjB,OAAOzG,KAAKiF,SAAS,CACnB5C,QAAS,KAIbqH,EAAY5E,EAAO,SAACzC,GACdyC,IAAU2E,EAAKnF,MAAMQ,OACvB2E,EAAKxE,SAAS,CAAE5C,+CAKb,IAAAsH,EAAA3J,KAAA4J,EACkE5J,KAAK+D,MAAtE6D,EADDgC,EACChC,WAAYiC,EADbD,EACaC,QAAShD,EADtB+C,EACsB/C,OAAQC,EAD9B8C,EAC8B9C,aAAcvC,EAD5CqF,EAC4CrF,SAAUuF,EADtDF,EACsDE,QADtD1E,EAEoBpF,KAAKsE,MAAxBQ,EAFDM,EAECN,MAAOzC,EAFR+C,EAEQ/C,QACf,OACEgD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKqC,GACJiC,GACCxE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAACsC,EAAD,CAAQhB,OAAQA,EAAQtC,SAAUA,EAAUuC,aAAcA,MAI5D+C,GACAxE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mCAEEF,EAAAC,EAAAC,cAAA,SACER,KAAK,OACLS,SAAU,SAAA5B,GAAC,OAAI+F,EAAKnE,SAAS5B,EAAEmG,cAAcjF,QAC7CA,MAAOA,KAGVzC,EAAQ+D,IAAI,SAAA4C,GAAK,OAChB3D,EAAAC,EAAAC,cAACyE,EAAD,CAAOhB,MAAOA,EAAOlD,QAAS,kBAAMgE,EAAQd,EAAMxG,mBAxDtCuD,aCCpBkE,qBACJ,SAAAA,EAAYlG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAjE,KAAAiK,IACjBjG,EAAAC,OAAAE,EAAA,EAAAF,CAAAjE,KAAAiE,OAAAG,EAAA,EAAAH,CAAAgG,GAAA5F,KAAArE,KAAM+D,KACDO,MAAQ,CACX3B,QAAS,GACTuH,eAAgBpL,EAAcgB,UAC9BqK,KAAM,IALSnG,mFAUjBhE,KAAKoK,cAActL,EAAcgB,WACjCE,KAAKqK,SAAS,0FAGUC,GACDtK,KAAK+D,MAApBwG,aACWD,EAASC,aAC1BjJ,QAAQC,IAAR,WAAAtB,OAAuBqK,EAASC,aAChCvK,KAAKqK,SAASC,EAASC,8CAIlB/H,GAAK,IACJ0H,EAAmBlK,KAAKsE,MAAxB4F,eACRpL,EAAcqB,SAAS0B,KAAK,CAACW,GAAM0H,wCAGxBvI,GACXL,QAAQC,IAAII,GACZ7C,EAAcqB,SAASuB,eAAeC,GACtC3B,KAAKoK,cAAczI,yCAGPA,GAAI,IAAA8H,EAAAzJ,KAChBlB,EAAcqB,SAASsC,WAAW,SAACJ,GACjCoH,EAAKxE,SAAS,CAAEtC,QAASN,EAAS6H,eAAgBvI,8CAItC,IAAAgI,EAAA3J,KAAAoF,EACsBpF,KAAKsE,MAAjC4F,EADM9E,EACN8E,eAAgBvH,EADVyC,EACUzC,QACxB,OACE0C,EAAAC,EAAAC,cAAA,UAAQT,MAAOoF,EAAgB1E,SAAU,SAAA5B,GAAC,OAAI+F,EAAKa,aAAa5G,EAAEiB,OAAOC,SACtEnC,EAAQyD,IAAI,SAAAqE,GAAM,OACjBpF,EAAAC,EAAAC,cAAA,UAAQc,IAAKoE,EAAO9I,GAAImD,MAAO2F,EAAO9I,IACnC8I,EAAOlH,0CAOT,IAAAmH,EAAA1K,KAAA2K,EACmB3K,KAAKsE,MAAvB6F,EADDQ,EACCR,KAAMxH,EADPgI,EACOhI,QADPiH,EAE8E5J,KAAK+D,MAAlF6G,EAFDhB,EAECgB,YAAaC,EAFdjB,EAEciB,cAAeC,EAF7BlB,EAE6BkB,iBAAkBjE,EAF/C+C,EAE+C/C,OAAQC,EAFvD8C,EAEuD9C,aAAcvD,EAFrEqG,EAEqErG,KAC5E,OACE8B,EAAAC,EAAAC,cAAA,WACG5C,EAAQ8D,OAAS,GAAKzG,KAAK+K,gBAE5B1F,EAAAC,EAAAC,cAAA,QACEyF,SAAU,SAACpH,GAGT,OAFAA,EAAEqH,iBACFJ,EAAcV,IACP,IAGT9E,EAAAC,EAAAC,cAAA,wBAAAtF,OAAmBsD,IACnB8B,EAAAC,EAAAC,cAAA,oBAEEF,EAAAC,EAAAC,cAAA,SACEM,UAAU,cACVd,KAAK,SACLS,SAAU,SAAA5B,GAAC,OAAI8G,EAAKzF,SAAS,CAAEkF,KAAMvG,EAAEmG,cAAcjF,SACrDA,MAAOqF,EACPe,KAAK,IACLvF,IAAI,IACJC,IAAI,QAENP,EAAAC,EAAAC,cAAA,SAAOM,UAAU,uBAAuBd,KAAK,SAASD,MAAM,aAIhEO,EAAAC,EAAAC,cAAA,UAAKuF,GAEJF,GACCvF,EAAAC,EAAAC,cAAA,qCAEG,IACDF,EAAAC,EAAAC,cAACyE,EAAD,CAAOhB,MAAO4B,KAIlBvF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsC,EAAD,CAAQhB,OAAQA,EAAQC,aAAcA,aA9FlBf,cA6G9BkE,EAAgB3D,aAAe,CAC7BsE,YAAa,KACbE,iBAAkB,GAClBhE,aAAc,IAGDmD,QCjFAkB,cAnCb,SAAAA,EAAYpH,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAjE,KAAAmL,IACjBnH,EAAAC,OAAAE,EAAA,EAAAF,CAAAjE,KAAAiE,OAAAG,EAAA,EAAAH,CAAAkH,GAAA9G,KAAArE,KAAM+D,KAEDO,MAAQ,CACXjC,QAAS,IAJM2B,mFAQC,IAAAyF,EAAAzJ,MJ+BtB,SAA0BuD,EAAMb,GAC9BpB,QAAQC,IAAI,oBACZgH,MAAK,GAAAtI,OAAI6H,EAAJ,qBAAA7H,OAA2BsD,IAC7BnB,KAAK,SAACoG,GAEL,OADAlH,QAAQC,IAAI,wBACLiH,EAASC,SAEjBrG,KAAK,SAAAsG,GAAG,OAAIhG,EAASgG,EAAIC,KAAKrG,UAC9BsG,MAAM,SAAChF,GACNtC,QAAQC,IAAIqC,KItCdwH,CADiBpL,KAAK+D,MAAdR,KACe,SAAC2E,GACtB5G,QAAQC,IAAI2G,GACZuB,EAAKxE,SAAS,CACZ5C,QAAS6F,uCAKN,IACC7F,EAAYrC,KAAKsE,MAAjBjC,QACAgJ,EAAiBrL,KAAK+D,MAAtBsH,aACR,OACEhG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4BACClD,EAAQ+D,IAAI,SAAA4C,GAAK,OAChB3D,EAAAC,EAAAC,cAACyE,EAAD,CAAO3D,IAAK2C,EAAMxG,IAAKwG,MAAOA,EAAOlD,QAAS,kBAAMuF,EAAarC,gBA1B5CjD,aCuDhBuF,cArDb,SAAAA,EAAYvH,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAjE,KAAAsL,IACjBtH,EAAAC,OAAAE,EAAA,EAAAF,CAAAjE,KAAAiE,OAAAG,EAAA,EAAAH,CAAAqH,GAAAjH,KAAArE,KAAM+D,KAEDO,MAAQ,CACXQ,MAAO,GACPzC,QAAS,IALM2B,wEASVc,GACP9E,KAAKiF,SAAS,CACZH,UAGF9E,KAAKoI,OAAOtD,kCAGPA,GAAO,IAAA2E,EAAAzJ,KACZ,GAAI8E,EAAM2B,OAAS,EACjB,OAAOzG,KAAKiF,SAAS,CACnB5C,QAAS,KAIbqH,EAAY5E,EAAO,SAACzC,GACdyC,IAAU2E,EAAKnF,MAAMQ,OACvB2E,EAAKxE,SAAS,CAAE5C,+CAKb,IAAAsH,EAAA3J,KAAAoF,EACoBpF,KAAKsE,MAAxBQ,EADDM,EACCN,MAAOzC,EADR+C,EACQ/C,QADRuH,EAEwB5J,KAAK+D,MAA5BsH,EAFDzB,EAECyB,aAAc9H,EAFfqG,EAEerG,KACtB,OACE8B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,SAAOR,KAAK,OAAOS,SAAU,SAAA5B,GAAC,OAAI+F,EAAKnE,SAAS5B,EAAEmG,cAAcjF,QAAQA,MAAOA,KAEhFA,EAAM2B,OAAS,GACXpE,EAAQ+D,IAAI,SAAA4C,GAAK,OAAI3D,EAAAC,EAAAC,cAACyE,EAAD,CAAOhB,MAAOA,EAAOlD,QAAS,kBAAMuF,EAAarC,QACzD,IAAjBlE,EAAM2B,QAAgBpB,EAAAC,EAAAC,cAACgG,EAAD,CAAkBhI,KAAMA,EAAM8H,aAAcA,YA3C5CtF,aCehByF,EAhBgB,SAAAvF,GAAA,IAAG2E,EAAH3E,EAAG2E,YAAaa,EAAhBxF,EAAgBwF,OAAQlH,EAAxB0B,EAAwB1B,SAAUsC,EAAlCZ,EAAkCY,OAAQC,EAA1Cb,EAA0Ca,aAA1C,OAC7BzB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,yBAAAtF,OAAoBwL,EAApB,sBACApG,EAAAC,EAAAC,cAAA,WACGqF,GAAevF,EAAAC,EAAAC,cAACyE,EAAD,CAAOhB,MAAO4B,IAC7B/D,GAAUxB,EAAAC,EAAAC,cAACsC,EAAD,CAAQhB,OAAQA,EAAQtC,SAAUA,EAAUuC,aAAcA,OCW5D4E,EAhBS,SAAAzF,GAAA,IAAG2E,EAAH3E,EAAG2E,YAAa/D,EAAhBZ,EAAgBY,OAAQC,EAAxBb,EAAwBa,aAAcvC,EAAtC0B,EAAsC1B,SAAtC,OACtBc,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyE,EAAD,CAAOhB,MAAO4B,IACdvF,EAAAC,EAAAC,cAACsC,EAAD,CAAQhB,OAAQA,EAAQtC,SAAUA,EAAUuC,aAAcA,OCE1D6E,uLACS,IAAA/B,EAC8C5J,KAAK+D,MAAtD6H,EADGhC,EACHgC,OAAQrI,EADLqG,EACKrG,KAAM2C,EADX0D,EACW1D,QAASM,EADpBoD,EACoBpD,YAAajC,EADjCqF,EACiCrF,SAC5C,OAAIqH,EACKvG,EAAAC,EAAAC,cAACsG,EAAD,CAAoBtI,KAAMA,EAAM2C,QAASA,EAASM,YAAaA,IAGjEnB,EAAAC,EAAAC,cAACuG,EAAD,CAAsBvI,KAAMA,EAAM2C,QAASA,EAAS3B,SAAUA,yCAG1D,IAAAwH,EAC8B/L,KAAK+D,MAAtCW,EADGqH,EACHrH,aAAcS,EADX4G,EACW5G,eACtB,OAAOE,EAAAC,EAAAC,cAACyG,EAAD,CAAkBtH,aAAcA,EAAcS,eAAgBA,yCAG1D,IAAA8G,EAgBPjM,KAAK+D,MAdP6H,EAFSK,EAETL,OACA/E,EAHSoF,EAGTpF,OACAC,EAJSmF,EAITnF,aACAyD,EALS0B,EAKT1B,WACAK,EANSqB,EAMTrB,YACArG,EAPS0H,EAOT1H,SACAkH,EARSQ,EAQTR,OACAZ,EATSoB,EASTpB,cACAjD,EAVSqE,EAUTrE,WACArE,EAXS0I,EAWT1I,KACA2I,EAZSD,EAYTC,SACApC,EAbSmC,EAaTnC,QACAuB,EAdSY,EAcTZ,aACAxB,EAfSoC,EAeTpC,QAEF,OAAI+B,EAEAvG,EAAAC,EAAAC,cAAC4G,EAAD,CACEtF,OAAQA,EACRC,aAAcA,EACdyD,WAAYA,EACZK,YAAaA,EACbrH,KAAMA,EACNsH,cAAeA,IAMjBjD,EAAa,EACXsE,EAEA7G,EAAAC,EAAAC,cAAC6G,EAAD,CACEvF,OAAQA,EACRC,aAAcA,EACdc,WAAYA,EACZrD,SAAUA,IAMdc,EAAAC,EAAAC,cAAC8G,EAAD,CACExF,OAAQA,EACRC,aAAcA,EACdgD,QAASA,EACTlC,WAAYA,EACZiC,QAASA,EACTtF,SAAUA,IAKZ2H,EACK7G,EAAAC,EAAAC,cAAC+G,EAAD,CAAkB/I,KAAMA,EAAM8H,aAAcA,IAIjDT,EAEAvF,EAAAC,EAAAC,cAACgH,EAAD,CACE1F,OAAQA,EACRC,aAAcA,EACd8D,YAAaA,EACbrG,SAAUA,IAMdc,EAAAC,EAAAC,cAACiH,EAAD,CACEf,OAAQA,EACRlH,SAAUA,EACVsC,OAAQA,EACRC,aAAcA,EACd8D,YAAaA,qCAKV,IAAA6B,EAC+BzM,KAAK+D,MAAnC2I,EADDD,EACCC,QAASnI,EADVkI,EACUlI,SAAUqH,EADpBa,EACoBb,OAE3B,OAAKrH,GAAaqH,EAGbc,EAGE1M,KAAK2M,aAFH3M,KAAK4M,aAHL5M,KAAK6M,oBArGC9G,aAkInB4F,EAAKrF,aAAe,CAClB/C,KAAM,GACNgB,SAAU,GACVkH,OAAQ,GACR5E,OAAQ,GACRC,aAAc,GACdyD,WAAY,KACZrE,QAAS,GACT0E,aAAa,GAEAe,QChJAmB,EANF,kBACX3G,EAAA,qBAAKN,UAAU,QACbM,EAAA,qBAAKgD,IAAI,OAAOC,IAAI,gBCAlB2D,EAAS,SAAA9G,GAAA,IAAGiG,EAAHjG,EAAGiG,SAAUN,EAAb3F,EAAa2F,OAAQoB,EAArB/G,EAAqB+G,SAArB,OACb7G,EAAA,qBAAKN,UAAS,cAAA5F,OAAgBiM,EAAW,aAAe,IAA1CjM,OAA+C2L,EAAS,WAAa,KACjFzF,EAAA,qBAAKN,UAAU,WACbM,EAAA,qBAAKN,UAAU,UACbM,EAAA,cAAC8G,EAAD,OAGF9G,EAAA,qBAAKN,UAAU,WAAWmH,MAShCD,EAAOzG,aAAe,CACpB0G,SAAU,MAEGD,QC4NAG,cA7Ob,SAAAA,EAAYnJ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAjE,KAAAkN,IACjBlJ,EAAAC,OAAAE,EAAA,EAAAF,CAAAjE,KAAAiE,OAAAG,EAAA,EAAAH,CAAAiJ,GAAA7I,KAAArE,KAAM+D,KACDO,MAAQ,CACX6I,SAAS,EACTvB,QAAQ,EACRwB,SAAS,EACTV,SAAS,EACT9E,WAAY,EACZsE,UAAU,EACVrC,SAAS,EACTwD,SAAS,GAVMrJ,mFAcC,IAAAyF,EAAAzJ,KAClBsB,QAAQC,IAAIlC,+CACZsE,EAAG,UAAW,SAACuE,GAAS,IAAAoF,EACO7D,EAAKnF,MAA1BC,EADc+I,EACd/I,SAAUsC,EADIyG,EACJzG,OACd4C,GACElF,GACFjD,QAAQC,IAAR,eAAAtB,OAA2BsE,GAA3BtE,OAAsC4G,EAAOtC,KAC7C4D,EAAK,cAAe,CAClB5D,WACAgJ,MAAO1G,EAAOtC,MAMlBjD,QAAQC,IAAI,eAIhBoC,EAAG,aAAc,WAAM,IAAA6J,EACsB/D,EAAKnF,MAAxCC,EADaiJ,EACbjJ,SAAUsC,EADG2G,EACH3G,OAAQC,EADL0G,EACK1G,aACtBvC,KAAYuC,IACdD,EAAOtC,IAAauC,EAAavC,MAGrCZ,EAAG,eAAgB,SAACuE,GAClBuF,MAAM,kBAER9J,EAAG,sBAAuB,SAACuE,GACzBuF,MAAM,2BAER9J,EAAG,SAAU,SAACY,GACZkF,EAAKxE,SAAS,CACZV,eAGJZ,EAAG,SAAU,SAACuE,GACZ5G,QAAQC,IAAI2G,GACZ,IAAM5D,EAAKL,OAAAyJ,EAAA,EAAAzJ,CAAA,GACNiE,EADM,CAETiF,SAAS,IAEY,YAAnBjF,EAAKyF,WACPrJ,EAAM8I,SAAU,EAChB9I,EAAMoI,SAAU,EAChBpI,EAAMC,UAAW,EACjBD,EAAMsH,QAAS,GACa,UAAnB1D,EAAKyF,UACdrJ,EAAM8I,SAAU,EACY,WAAnBlF,EAAKyF,WACdrJ,EAAMoI,SAAU,EAChBpI,EAAM8I,SAAU,GACY,YAAnBlF,EAAKyF,UACdrJ,EAAM8I,SAAU,EACY,aAAnBlF,EAAKyF,YACdrJ,EAAMsD,WAAa,EACnBtD,EAAM8I,SAAU,GAGlB3D,EAAKxE,SAASX,KAGhBX,EAAG,SAAU,SAACuE,GAAS,IACb3D,EAAakF,EAAKnF,MAAlBC,SACRkF,EAAKxE,SAAS,CACZwG,OAAQvD,EACR0F,aAAc,KACdhD,aAAa,EACbsB,SAAUhE,GAAQ3D,MAItBZ,EAAG,YAAa,SAACuE,GACfuB,EAAKxE,SAAS,CACZ2F,YAAa1C,EAAK0F,iBAItBjK,EAAG,aAAc,SAAAsC,GAAmB,IAAhB4H,EAAgB5H,EAAhB4H,UAClBpE,EAAKxE,SAAS,CACZ2F,aAAa,EACbf,SAAS,EACTjC,WAAYiG,EAAY,MAG1BC,cAAcrE,EAAKsE,eACnBtE,EAAKsE,mBAAgBvJ,EACrBiF,EAAKsE,cAAgBC,YAAY,WAAM,IAC7BpG,EAAe6B,EAAKnF,MAApBsD,WACR,GAAIA,EAAa,EAMf,OALAkG,cAAcrE,EAAKsE,eACnBtE,EAAKsE,mBAAgBvJ,OACrBiF,EAAKxE,SAAS,CACZ2C,WAAY,IAIhB6B,EAAKxE,SAAS,CACZ2C,WAAYA,EAAa,KAE1B,OAGLjE,EAAG,eAAgB,SAACuE,GAClBuB,EAAKxE,SAAS,CACZsF,WAAYrC,MAIhBvE,EAAG,cAAe,SAACuE,GACjBuB,EAAKxE,SAAS,CACZoI,QAASnF,0CAObC,EAAK,gBADYnI,KAAKsE,MAAdf,0CAMR4E,EAAK,gBADYnI,KAAKsE,MAAdf,2CAKG0K,EAAM1K,GACZ0K,EAAKxH,QAGV0B,EAAK,OAAQ,CAAE8F,OAAM1K,8CAIrBvD,KAAKiF,SACH,CACE2G,QAAQ,EACRwB,SAAS,GAEX,kBAAMjF,EAAK,4CAIT3F,GAAK,IAAA4C,EAC2BpF,KAAKsE,MAAjCuF,EADCzE,EACDyE,QAAStF,EADRa,EACQb,SAAUhB,EADlB6B,EACkB7B,KACtBsG,GACH7J,KAAKiF,SACH,CACE4E,SAAS,GAEX,kBAAM1B,EAAK,QAAS,CAAE3F,MAAKe,OAAMgB,gDAK9B4F,GACPnK,KAAKiF,SAAS,CAAEiJ,MAAO/D,GAAQ,kBAAMhC,EAAK,QAASgC,wCAG1C9B,GAAM,IACP9E,EAASvD,KAAKsE,MAAdf,KACRvD,KAAKiF,SACH,CACE2I,cAAc,GAEhB,kBAAMzF,EAAK,eAAgB,CAAEE,OAAM9E,4CAI9B,IAAAoG,EAAA3J,KAAA2K,EAkBH3K,KAAKsE,MAhBPf,EAFKoH,EAELpH,KACA4J,EAHKxC,EAGLwC,QACAjB,EAJKvB,EAILuB,SACAN,EALKjB,EAKLiB,OACAwB,EANKzC,EAMLyC,QACAlH,EAPKyE,EAOLzE,QACA3B,EARKoG,EAQLpG,SACAmI,EATK/B,EASL+B,QACA7F,EAVK8D,EAUL9D,OACA4E,EAXKd,EAWLc,OACA3E,EAZK6D,EAYL7D,aACAc,EAbK+C,EAaL/C,WACAgD,EAdKD,EAcLC,YACAL,EAfKI,EAeLJ,WACAV,EAhBKc,EAgBLd,QACAwD,EAjBK1C,EAiBL0C,QAEF,OAAIF,EACK9H,EAAAC,EAAAC,cAAA,yBAIPF,EAAAC,EAAAC,cAAC4I,EAAD,CAAQjC,SAAUA,EAAUN,OAAQA,GAClCvG,EAAAC,EAAAC,cAAC6I,EAAD,CACE7K,KAAMA,EACN2C,QAASA,EACTW,OAAQA,EACRC,aAAcA,EACd8E,OAAQA,EACRwB,QAASA,EACT7I,SAAUA,EACVmI,QAASA,EACT9E,WAAYA,EACZsE,SAAUA,EACVT,OAAQA,EACRb,YAAaA,EACbL,WAAYA,EACZV,QAASA,EACTwD,QAASA,EACT7G,YAAa,kBAAMmD,EAAK0E,aACxBlJ,eAAgB,SAACmJ,EAAGC,GAAJ,OAAU5E,EAAK6E,aAAaF,EAAGC,IAC/C7J,aAAc,kBAAMiF,EAAK8E,cACzB3E,QAAS,SAAAtH,GAAG,OAAImH,EAAK+E,MAAMlM,IAC3B6I,aAAc,SAAAhD,GAAI,OAAIsB,EAAKgF,WAAWtG,IACtCwC,cAAe,SAAAV,GAAI,OAAIR,EAAKiF,SAASzE,cAvO7BpE,aCKZ8I,EAAcC,QACW,cAA7BtP,OAAOC,SAASsP,UAEe,UAA7BvP,OAAOC,SAASsP,UAEhBvP,OAAOC,SAASsP,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACT9M,KAAK,SAAAkN,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBlL,QACf6K,UAAUC,cAAcO,WAK1BrO,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBqH,MAAM,SAAAgH,GACLtO,QAAQsO,MAAM,4CAA6CA,KChEjEC,IAASC,OAAOzK,EAAAC,EAAAC,cAACwK,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBd,UAAW,CAGzE,GADkB,IAAIe,IAAI7Q,GAAwBG,OAAOC,UAC3CC,SAAWF,OAAOC,SAASC,OAIvC,OAGFF,OAAO2Q,iBAAiB,OAAQ,WAC9B,IAAMjB,EAAK,GAAAjP,OAAMZ,GAAN,sBAENwP,EAwCX,SAAiCK,GAE/B3G,MAAM2G,GACH9M,KAAK,SAAAoG,GAGkB,MAApBA,EAASvH,SACuD,IAAhEuH,EAAS4H,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CnB,UAAUC,cAAcmB,MAAMnO,KAAK,SAAAkN,GACjCA,EAAakB,aAAapO,KAAK,WAC7B5C,OAAOC,SAASgR,aAKpBxB,EAAgBC,KAGnBtG,MAAM,WACLtH,QAAQC,IACN,mEAzDAmP,CAAwBxB,GAHxBD,EAAgBC,MC7BxByB","file":"static/js/main.fa242daa.chunk.js","sourcesContent":["const SpotifyPlayer = {\n  base_config: {\n    api_endpoint: 'https://api.spotify.com',\n    auth_endpoint: 'https://accounts.spotify.com/authorize',\n  },\n  config: {\n    player_name: \"Dude, what's my song\",\n    client_id: process.env.REACT_APP_CLIENT_ID,\n    redirect_uri: window.location.origin,\n    scopes: [\n      'streaming',\n      'user-read-birthdate',\n      'user-read-email',\n      'user-read-private',\n      'user-read-playback-state',\n      'user-modify-playback-state',\n    ],\n  },\n  access_token: null,\n  player: null,\n  device_id: null,\n  sendToLogin() {\n    window.location = [\n      this.base_config.auth_endpoint,\n      `?client_id=${this.config.client_id}`,\n      `&redirect_uri=${this.config.redirect_uri}`,\n      `&scope=${this.config.scopes.join('%20')}`,\n      '&response_type=token',\n      '&show_dialog=true',\n    ].join('');\n  },\n};\n\n// V2: Added playback controls\nSpotifyPlayer.controls = {\n  _request(method, endpoint, params) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open(method, SpotifyPlayer.base_config.api_endpoint + endpoint, true);\n      xhr.setRequestHeader('Content-type', 'application/json; charset=utf-8');\n      xhr.setRequestHeader('Authorization', `Bearer ${SpotifyPlayer.access_token}`);\n      xhr.onload = () => {\n        if (xhr.readyState === 4 && (xhr.status === 200 || xhr.status === 204)) {\n          try {\n            if (!xhr.responseText) {\n              return resolve();\n            }\n            resolve(JSON.parse(xhr.responseText));\n          } catch (err) {\n            console.log(err);\n            reject();\n          }\n        }\n      };\n      xhr.send(JSON.stringify(params));\n    });\n  },\n  switchPlayback(id) {\n    return this._request('PUT', '/v1/me/player', { device_ids: [id] });\n  },\n  play(uris, id) {\n    if (uris) {\n      this._request('PUT', `/v1/me/player/play?device_id=${id}`, { uris });\n    } else {\n      this._request('PUT', '/v1/me/player/play');\n    }\n  },\n  pause() {\n    this._request('PUT', '/v1/me/player/pause');\n  },\n  prevTrack() {\n    this._request('POST', '/v1/me/player/previous');\n  },\n  nextTrack() {\n    this._request('POST', '/v1/me/player/next');\n  },\n  searchAndPlay(query) {\n    this._request('GET', `/v1/search?type=track&q=${query}*&market=from_token`, {}).then(\n      (results) => {\n        SpotifyPlayer.controls.play([results.tracks.items[0].uri]);\n      },\n    );\n  },\n  getDevices(callback) {\n    this._request('GET', '/v1/me/player/devices').then((results) => {\n      callback(results.devices);\n    });\n  },\n};\n\nconst hash = window.location.hash\n  .substring(1)\n  .split('&')\n  .reduce((initial, item) => {\n    if (item) {\n      const parts = item.split('=');\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\n\n// Make our window URL hash empty.\nSpotifyPlayer.access_token = hash.access_token;\nwindow.location.hash = '';\n\nexport function auth() {\n  // If there is no token, redirect to Spotify authorization\n  if (!SpotifyPlayer.access_token) {\n    SpotifyPlayer.sendToLogin();\n  }\n}\n\nwindow.onSpotifyPlayerAPIReady = () => {\n  // Initialize our Player\n  SpotifyPlayer.player = new window.Spotify.Player({\n    name: SpotifyPlayer.config.player_name,\n    getOauthToken(cb) {\n      cb(SpotifyPlayer.access_token);\n    },\n    volume: 0.8,\n  });\n\n  // Player is ready and can be issued commands\n  SpotifyPlayer.player.on('ready', (e) => {\n    console.log('Ready to rock!', e);\n    SpotifyPlayer.device_id = e.device_id;\n  });\n\n  // Player state changed\n  // The event contains information about the current player state\n  SpotifyPlayer.player.on('player_state_changed', (e) => {\n    console.log('Player state changed', (window.e = e));\n  });\n\n  // Handle errors\n  SpotifyPlayer.player.on('initialization_failed', (e) => {\n    console.log('Initialization Failed', e);\n  });\n  SpotifyPlayer.player.on('authentication_error', (e) => {\n    console.log('Authentication Error', e);\n  });\n  SpotifyPlayer.player.on('account_error', (e) => {\n    console.log('Account Error', e);\n  });\n  SpotifyPlayer.player.on('playback_error', (e) => {\n    console.log('Playback Error', e);\n  });\n\n  // Connect to the Player\n  SpotifyPlayer.player.connect();\n};\n\nexport default SpotifyPlayer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SpotifyPlayer, { auth } from '../playback';\n\nclass JoinOrCreateRoom extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nickname: undefined,\n      room: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { onJoinAsHost } = this.props;\n    if (SpotifyPlayer.access_token) {\n      onJoinAsHost();\n    }\n  }\n\n  handleChange(event) {\n    const field = event.target.name;\n    const value = event.target.type === 'number' ? parseInt(event.target.value, 10) : event.target.value;\n    this.setState({ [field]: value });\n  }\n\n  render() {\n    const { onJoinAsPlayer } = this.props;\n    const { room, nickname } = this.state;\n    return (\n      <div>\n        <label>Nickname</label>\n        <input\n          value={nickname}\n          onChange={this.handleChange.bind(this)}\n          type=\"text\"\n          name=\"nickname\"\n        />\n        <label>Room code</label>\n        <input\n          value={room}\n          onChange={this.handleChange.bind(this)}\n          type=\"number\"\n          min=\"1000\"\n          max=\"9999\"\n          name=\"room\"\n        />\n        <button type=\"button\" className=\"button\" onClick={() => onJoinAsPlayer(nickname, room)}>\n          Join\n        </button>\n        <button type=\"button\" className=\"button\" onClick={() => auth()}>\n          Start a new game\n        </button>\n      </div>\n    );\n  }\n}\nJoinOrCreateRoom.propTypes = {\n  onJoinAsPlayer: PropTypes.func.isRequired,\n  onJoinAsHost: PropTypes.func.isRequired,\n};\nexport default JoinOrCreateRoom;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Players = ({ players, nickname }) => (\n  <div className=\"players\">\n    {players.map(name => (\n      <div key={name}>\n        {name}\n        <small>{name === nickname && ' (you)'}</small>\n      </div>\n    ))}\n  </div>\n);\nPlayers.propTypes = {\n  players: PropTypes.array,\n  nickname: PropTypes.string,\n};\n\nPlayers.defaultProps = {\n  players: [],\n  nickname: '',\n};\nexport default Players;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Players from '../components/Players';\n\nconst HostWaitingToStart = ({ name, players, onStartGame }) => (\n  <div>\n    <h2>Waiting for players</h2>\n    <h2>{`Room code: ${name}`}</h2>\n    {players.length > 1 && (\n      <button type=\"button\" className=\"button\" onClick={() => onStartGame()}>\n        Start game\n      </button>\n    )}\n    <Players players={players} />\n  </div>\n);\n\nHostWaitingToStart.propTypes = {\n  name: PropTypes.string,\n  players: PropTypes.array,\n  onStartGame: PropTypes.func.isRequired,\n};\nHostWaitingToStart.defaultProps = {\n  name: '',\n  players: [],\n};\nexport default HostWaitingToStart;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Players from '../components/Players';\n\nconst PlayerWaitingToStart = ({ name, players, nickname }) => (\n  <div>\n    <h2>Waiting for host to start</h2>\n    <h2>{`Room code: ${name}`}</h2>\n    <Players players={players} nickname={nickname} />\n  </div>\n);\nPlayerWaitingToStart.propTypes = {\n  name: PropTypes.string,\n  players: PropTypes.array,\n  nickname: PropTypes.string.isRequired,\n};\nPlayerWaitingToStart.defaultProps = {\n  name: '',\n  players: [],\n};\nexport default PlayerWaitingToStart;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport AnimatedNumber from 'react-animated-number';\n\nconst Scores = ({ scores, nickname, scoreUpdates }) => (\n  <div className=\"scores\">\n    {scores\n      && Object.keys(scores)\n        .sort((a, b) => scores[b] - scores[a])\n        .map(name => (\n          <div key={name}>\n            <div className=\"score-row\">\n              <div className=\"score-name\">\n                {name}\n                {name === nickname && <small> (you)</small>}\n              </div>\n              <div className=\"score-score\">\n                <div>\n                  {name in scores && (\n                    <AnimatedNumber\n                      style={{\n                        transition: '0.8s ease-out',\n                        transitionProperty: 'background-color, color, opacity',\n                      }}\n                      stepPrecision={0}\n                      duration={500}\n                      frameStyle={perc => (perc === 100 ? {} : {})}\n                      initialValue={scores[name]}\n                      value={scores[name]}\n                    />\n                  )}\n                </div>\n                <div className=\"score-addition\">\n                  {name in scoreUpdates && `+${scoreUpdates[name]}`}\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n  </div>\n);\nScores.propTypes = {\n  scores: PropTypes.object.isRequired,\n  scoreUpdates: PropTypes.object.isRequired,\n  nickname: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n};\nScores.defaultProps = {\n  nickname: undefined,\n};\nexport default Scores;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Scores from '../components/Scores';\n\nconst LeaderWaitingForGuesses = ({ scores, scoreUpdates, nickname, guessTimer }) => (\n  <div>\n    <h1>{guessTimer}</h1>\n    <h2>Waiting for guesses</h2>\n    <Scores scores={scores} nickname={nickname} scoreUpdates={scoreUpdates} />\n  </div>\n);\n\nLeaderWaitingForGuesses.propTypes = {\n  scores: PropTypes.object.isRequired,\n  scoreUpdates: PropTypes.object.isRequired,\n  nickname: PropTypes.string.isRequired,\n  guessTimer: PropTypes.number.isRequired,\n};\nexport default LeaderWaitingForGuesses;\n","/* eslint-disable no-undef */\nimport io from 'socket.io-client';\n\nconst api = window.location.origin.replace(/3000/, '8888');\n\nconst socket = io(api);\n\nfunction disconnect() {\n  socket.disconnect();\n}\n\nfunction reconnect() {\n  socket.connect();\n}\n\nwindow.disconnect = disconnect;\n\nwindow.reconnect = reconnect;\n\nfunction on(event, callback) {\n  socket.on(event, (data) => {\n    console.log('receiving', event, data);\n    callback(data);\n  });\n}\n\nfunction emit(event, data, callback) {\n  console.log('sending', event, data);\n  socket.emit(event, data);\n}\n\nfunction search(song, callback) {\n  song = encodeURIComponent(song);\n  console.log('search');\n  fetch(`${api}/search/${song}`)\n    .then((response) => {\n      console.log('fetch');\n      return response.json();\n    })\n    .then(res => callback(res.body.tracks.items))\n    .catch((e) => {\n      console.log(e);\n    });\n}\n\nfunction getAudioAnalysis(name, callback) {\n  console.log('getAudioAnalysis');\n  fetch(`${api}/recommendations/${name}`)\n    .then((response) => {\n      console.log('fetch audio analysis');\n      return response.json();\n    })\n    .then(res => callback(res.body.tracks))\n    .catch((e) => {\n      console.log(e);\n    });\n}\n\nexport { on, emit, search, getAudioAnalysis };\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n// TODO FIX\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Track = ({ onClick, track }) => (\n  <React.Fragment>\n    {track && (\n      <div className=\"coverArt\" onClick={onClick}>\n        <div className=\"trackitem\">\n          {!track.album.images.length - 1 && (\n            <img alt=\"Album img\" src={track.album.images[track.album.images.length - 1].url} />\n          )}\n          <div className=\"trackinfo\">\n            <div className=\"trackname\">\n              {' '}\n              {track.name}\n              {' '}\n            </div>\n            <div className=\"trackartists\">\n              {' '}\n              {track.artists.map(artist => (\n                <span key={artist.name}>\n                  {artist.name}\n                  {' '}\n                </span>\n              ))}\n              {' '}\n            </div>\n          </div>\n        </div>\n      </div>\n    )}\n  </React.Fragment>\n);\nTrack.propTypes = {\n  onClick: PropTypes.func,\n  track: PropTypes.object.isRequired,\n};\nTrack.defaultProps = {\n  onClick: () => {},\n};\nexport default Track;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { search as trackSearch } from '../api';\nimport Track from '../components/Track';\nimport Scores from '../components/Scores';\n\nclass PlayerGuess extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: '',\n      results: [],\n    };\n  }\n\n  onChange(value) {\n    this.setState({\n      value,\n    });\n\n    this.search(value);\n  }\n\n  search(value) {\n    if (value.length < 2) {\n      return this.setState({\n        results: [],\n      });\n    }\n\n    trackSearch(value, (results) => {\n      if (value === this.state.value) {\n        this.setState({ results });\n      }\n    });\n  }\n\n  render() {\n    const { guessTimer, guessed, scores, scoreUpdates, nickname, onGuess } = this.props;\n    const { value, results } = this.state;\n    return (\n      <div>\n        <h1>{guessTimer}</h1>\n        {guessed && (\n          <div>\n            <h2>Waiting for other players</h2>\n            <Scores scores={scores} nickname={nickname} scoreUpdates={scoreUpdates} />\n          </div>\n        )}\n\n        {!guessed && (\n          <div>\n            <label>\n              Guess the song name\n              <input\n                type=\"text\"\n                onChange={e => this.onChange(e.currentTarget.value)}\n                value={value}\n              />\n            </label>\n            {results.map(track => (\n              <Track track={track} onClick={() => onGuess(track.uri)} />\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nPlayerGuess.propTypes = {\n  guessTimer: PropTypes.number.isRequired,\n  guessed: PropTypes.bool.isRequired,\n  scores: PropTypes.object.isRequired,\n  scoreUpdates: PropTypes.object.isRequired,\n  nickname: PropTypes.string.isRequired,\n  onGuess: PropTypes.func.isRequired,\n};\n\nexport default PlayerGuess;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Z_FULL_FLUSH } from 'zlib';\nimport Scores from '../components/Scores';\nimport Track from '../components/Track';\nimport SpotifyPlayer from '../playback';\n\nclass HostMusicPlayer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      devices: [],\n      selectedDevice: SpotifyPlayer.device_id,\n      time: 30,\n    };\n  }\n\n  componentDidMount() {\n    this.updateDevices(SpotifyPlayer.device_id);\n    this.playSong('spotify:track:1DCNcPA0Y9ukY5AlXAZKUm');\n  }\n\n  componentWillReceiveProps(newProps) {\n    const { songToPlay } = this.props;\n    if (songToPlay !== newProps.songToPlay) {\n      console.log(`Playing ${newProps.songToPlay}`);\n      this.playSong(newProps.songToPlay);\n    }\n  }\n\n  playSong(uri) {\n    const { selectedDevice } = this.state;\n    SpotifyPlayer.controls.play([uri], selectedDevice);\n  }\n\n  changeDevice(id) {\n    console.log(id);\n    SpotifyPlayer.controls.switchPlayback(id);\n    this.updateDevices(id);\n  }\n\n  updateDevices(id) {\n    SpotifyPlayer.controls.getDevices((results) => {\n      this.setState({ devices: results, selectedDevice: id });\n    });\n  }\n\n  renderDevices() {\n    const { selectedDevice, devices } = this.state;\n    return (\n      <select value={selectedDevice} onChange={e => this.changeDevice(e.target.value)}>\n        {devices.map(device => (\n          <option key={device.id} value={device.id}>\n            {device.name}\n          </option>\n        ))}\n      </select>\n    );\n  }\n\n  render() {\n    const { time, devices } = this.state;\n    const { correctSong, onChangeTimer, correctSongTimer, scores, scoreUpdates, name } = this.props;\n    return (\n      <div>\n        {devices.length > 0 && this.renderDevices()}\n\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            onChangeTimer(time);\n            return false;\n          }}\n        >\n          <h2>{`Room code: ${name}`}</h2>\n          <label>\n            Time\n            <input\n              className=\"timer-input\"\n              type=\"number\"\n              onChange={e => this.setState({ time: e.currentTarget.value })}\n              value={time}\n              step=\"5\"\n              min=\"1\"\n              max=\"180\"\n            />\n            <input className=\"button, timer-button\" type=\"submit\" value=\"Change\" />\n          </label>\n        </form>\n\n        <h1>{correctSongTimer}</h1>\n\n        {correctSong && (\n          <div>\n            The correct song was...\n            {' '}\n            <Track track={correctSong} />\n          </div>\n        )}\n\n        <div>\n          <Scores scores={scores} scoreUpdates={scoreUpdates} />\n        </div>\n      </div>\n    );\n  }\n}\nHostMusicPlayer.propTypes = {\n  correctSong: PropTypes.object,\n  onChangeTimer: PropTypes.any.isRequired,\n  correctSongTimer: PropTypes.any,\n  scores: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  scoreUpdates: PropTypes.any,\n};\n\nHostMusicPlayer.defaultProps = {\n  correctSong: null,\n  correctSongTimer: '',\n  scoreUpdates: {},\n};\n\nexport default HostMusicPlayer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { getAudioAnalysis } from '../api';\nimport Track from './Track';\n\nclass RecommendedSongs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      results: [],\n    };\n  }\n\n  componentDidMount() {\n    const { name } = this.props;\n    getAudioAnalysis(name, (data) => {\n      console.log(data);\n      this.setState({\n        results: data,\n      });\n    });\n  }\n\n  render() {\n    const { results } = this.state;\n    const { onSelectSong } = this.props;\n    return (\n      <div>\n        <div> Suggestions </div>\n        {results.map(track => (\n          <Track key={track.uri} track={track} onClick={() => onSelectSong(track)} />\n        ))}\n      </div>\n    );\n  }\n}\nRecommendedSongs.propTypes = {\n  onSelectSong: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n};\nexport default RecommendedSongs;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { search as trackSearch } from '../api';\nimport Track from '../components/Track';\nimport RecommendedSongs from '../components/RecommendedSongs';\n\nclass LeaderChooseSong extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: '',\n      results: [],\n    };\n  }\n\n  onChange(value) {\n    this.setState({\n      value,\n    });\n\n    this.search(value);\n  }\n\n  search(value) {\n    if (value.length < 2) {\n      return this.setState({\n        results: [],\n      });\n    }\n\n    trackSearch(value, (results) => {\n      if (value === this.state.value) {\n        this.setState({ results });\n      }\n    });\n  }\n\n  render() {\n    const { value, results } = this.state;\n    const { onSelectSong, name } = this.props;\n    return (\n      <div>\n        <label>\n          <h2>Dude, enter a song name</h2>\n          <input type=\"text\" onChange={e => this.onChange(e.currentTarget.value)} value={value} />\n        </label>\n        {value.length > 0\n          && results.map(track => <Track track={track} onClick={() => onSelectSong(track)} />)}\n        {value.length === 0 && <RecommendedSongs name={name} onSelectSong={onSelectSong} />}\n      </div>\n    );\n  }\n}\n\nLeaderChooseSong.propTypes = {\n  onSelectSong: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default LeaderChooseSong;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Scores from '../components/Scores';\nimport Track from '../components/Track';\n\nconst PlayerWaitingForLeader = ({ correctSong, leader, nickname, scores, scoreUpdates }) => (\n  <div>\n    <h2>{`Waiting for ${leader} to choose a song`}</h2>\n    <div>\n      {correctSong && <Track track={correctSong} />}\n      {scores && <Scores scores={scores} nickname={nickname} scoreUpdates={scoreUpdates} />}\n    </div>\n  </div>\n);\nPlayerWaitingForLeader.propTypes = {\n  correctSong: PropTypes.bool.isRequired,\n  leader: PropTypes.string.isRequired,\n  nickname: PropTypes.string.isRequired,\n  scores: PropTypes.object.isRequired,\n  scoreUpdates: PropTypes.object.isRequired,\n};\nexport default PlayerWaitingForLeader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Scores from '../components/Scores';\nimport Track from '../components/Track';\n\nconst ShowCorrectSong = ({ correctSong, scores, scoreUpdates, nickname }) => (\n  <div>\n    <h2>Correct song was</h2>\n    <div>\n      <Track track={correctSong} />\n      <Scores scores={scores} nickname={nickname} scoreUpdates={scoreUpdates} />\n    </div>\n  </div>\n);\n\nShowCorrectSong.propTypes = {\n  correctSong: PropTypes.object.isRequired,\n  scores: PropTypes.object.isRequired,\n  scoreUpdates: PropTypes.object.isRequired,\n  nickname: PropTypes.string.isRequired,\n};\nexport default ShowCorrectSong;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport JoinOrCreateRoom from './pages/JoinOrCreateRoom';\nimport HostWaitingToStart from './pages/HostWaitingToStart';\nimport PlayerWaitingToStart from './pages/PlayerWaitingToStart';\nimport LeaderWaitingForGuesses from './pages/LeaderWaitingForGuesses';\nimport PlayerGuess from './pages/PlayerGuess';\nimport HostMusicPlayer from './pages/HostMusicPlayer';\nimport LeaderChooseSong from './pages/LeaderChooseSong';\nimport PlayerWaitingForLeader from './pages/PlayerWaitingForLeader';\nimport ShowCorrectSong from './pages/ShowCorrectSong';\n\nclass Game extends Component {\n  renderWait() {\n    const { isHost, name, players, onStartGame, nickname } = this.props;\n    if (isHost) {\n      return <HostWaitingToStart name={name} players={players} onStartGame={onStartGame} />;\n    }\n\n    return <PlayerWaitingToStart name={name} players={players} nickname={nickname} />;\n  }\n\n  renderJoin() {\n    const { onJoinAsHost, onJoinAsPlayer } = this.props;\n    return <JoinOrCreateRoom onJoinAsHost={onJoinAsHost} onJoinAsPlayer={onJoinAsPlayer} />;\n  }\n\n  renderPlay() {\n    const {\n      isHost,\n      scores,\n      scoreUpdates,\n      songToPlay,\n      correctSong,\n      nickname,\n      leader,\n      onChangeTimer,\n      guessTimer,\n      name,\n      isLeader,\n      onGuess,\n      onSelectSong,\n      guessed,\n    } = this.props;\n    if (isHost) {\n      return (\n        <HostMusicPlayer\n          scores={scores}\n          scoreUpdates={scoreUpdates}\n          songToPlay={songToPlay}\n          correctSong={correctSong}\n          name={name}\n          onChangeTimer={onChangeTimer}\n        />\n      );\n    }\n\n    // If there is a guessing timer, we are on the guess screen\n    if (guessTimer > 0) {\n      if (isLeader) {\n        return (\n          <LeaderWaitingForGuesses\n            scores={scores}\n            scoreUpdates={scoreUpdates}\n            guessTimer={guessTimer}\n            nickname={nickname}\n          />\n        );\n      }\n\n      return (\n        <PlayerGuess\n          scores={scores}\n          scoreUpdates={scoreUpdates}\n          onGuess={onGuess}\n          guessTimer={guessTimer}\n          guessed={guessed}\n          nickname={nickname}\n        />\n      );\n    }\n\n    if (isLeader) {\n      return <LeaderChooseSong name={name} onSelectSong={onSelectSong} />;\n    }\n\n    // If guess timer is 0 and correct song is known, show score view\n    if (correctSong) {\n      return (\n        <ShowCorrectSong\n          scores={scores}\n          scoreUpdates={scoreUpdates}\n          correctSong={correctSong}\n          nickname={nickname}\n        />\n      );\n    }\n\n    return (\n      <PlayerWaitingForLeader\n        leader={leader}\n        nickname={nickname}\n        scores={scores}\n        scoreUpdates={scoreUpdates}\n        correctSong={correctSong}\n      />\n    );\n  }\n\n  render() {\n    const { started, nickname, isHost } = this.props;\n    // if the game has not yet started and we have not become host or entered nickname\n    if (!nickname && !isHost) {\n      return this.renderJoin();\n    }\n    if (!started) {\n      return this.renderWait();\n    }\n    return this.renderPlay();\n  }\n}\nGame.propTypes = {\n  name: PropTypes.string,\n  leader: PropTypes.string,\n  isHost: PropTypes.bool.isRequired,\n  scores: PropTypes.object,\n  scoreUpdates: PropTypes.object,\n  songToPlay: PropTypes.string,\n  players: PropTypes.array,\n  correctSong: PropTypes.bool,\n  isLeader: PropTypes.bool.isRequired,\n  nickname: PropTypes.string,\n  guessTimer: PropTypes.number.isRequired,\n  onGuess: PropTypes.func.isRequired,\n  onStartGame: PropTypes.func.isRequired,\n  onChangeTimer: PropTypes.func.isRequired,\n  onSelectSong: PropTypes.func.isRequired,\n  onJoinAsHost: PropTypes.func.isRequired,\n  onJoinAsPlayer: PropTypes.func.isRequired,\n  guessed: PropTypes.bool.isRequired,\n};\n\nGame.defaultProps = {\n  name: '',\n  nickname: '',\n  leader: '',\n  scores: {},\n  scoreUpdates: {},\n  songToPlay: null,\n  players: [],\n  correctSong: false,\n};\nexport default Game;\n","import * as React from 'react';\n\nconst Logo = () => (\n  <div className=\"logo\">\n    <img alt=\"logo\" src=\"/logo.png\" />\n  </div>\n);\n\nexport default Logo;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Logo from './Logo';\n\nconst Layout = ({ isLeader, isHost, children }) => (\n  <div className={`background ${isLeader ? 'is-leader ' : ''}${isHost ? 'is-host ' : ''}`}>\n    <div className=\"wrapper\">\n      <div className=\"navbar\">\n        <Logo />\n      </div>\n\n      <div className=\"content\">{children}</div>\n    </div>\n  </div>\n);\nLayout.propTypes = {\n  isLeader: PropTypes.bool.isRequired,\n  isHost: PropTypes.bool.isRequired,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n};\nLayout.defaultProps = {\n  children: null,\n};\nexport default Layout;\n","import React, { Component } from 'react';\nimport Game from './Game';\nimport { on, emit } from './api';\nimport Layout from './components/Layout';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      isHost: false,\n      hasHost: false,\n      started: false,\n      guessTimer: 0,\n      isLeader: false,\n      guessed: false,\n      playing: false,\n    };\n  }\n\n  componentDidMount() {\n    console.log(process.env);\n    on('connect', (data) => {\n      const { nickname, scores } = this.state;\n      if (this) {\n        if (nickname) {\n          console.log(`reconnected ${nickname}${scores[nickname]}`);\n          emit('reconnected', {\n            nickname,\n            score: scores[nickname],\n          });\n        } else {\n          console.log('Connected');\n        }\n      } else {\n        console.log('Connected');\n      }\n    });\n\n    on('disconnect', () => {\n      const { nickname, scores, scoreUpdates } = this.state;\n      if (nickname in scoreUpdates) {\n        scores[nickname] += scoreUpdates[nickname];\n      }\n    });\n    on('roomNotFound', (data) => {\n      alert('No such room');\n    });\n    on('playerAlreadyExists', (data) => {\n      alert('Player Already Exists');\n    });\n    on('joined', (nickname) => {\n      this.setState({\n        nickname,\n      });\n    });\n    on('status', (data) => {\n      console.log(data);\n      const state = {\n        ...data,\n        loading: false,\n      };\n      if (data.gamestate === 'pregame') {\n        state.hasHost = false;\n        state.started = false;\n        state.nickname = false;\n        state.isHost = false;\n      } else if (data.gamestate === 'lobby') {\n        state.hasHost = true;\n      } else if (data.gamestate === 'choose') {\n        state.started = true;\n        state.hasHost = true;\n      } else if (data.gamestate === 'midgame') {\n        state.hasHost = true;\n      } else if (data.gamestate === 'finished') {\n        state.guessTimer = 0;\n        state.hasHost = true;\n      }\n\n      this.setState(state);\n    });\n\n    on('leader', (data) => {\n      const { nickname } = this.state;\n      this.setState({\n        leader: data,\n        selectedSong: null,\n        correctSong: false, // <-- chnage to view from correct song to showing who is up next.\n        isLeader: data == nickname,\n      });\n    });\n\n    on('stopRound', (data) => {\n      this.setState({\n        correctSong: data.selectedSong,\n      });\n    });\n\n    on('startRound', ({ roundTime }) => {\n      this.setState({\n        correctSong: false,\n        guessed: false,\n        guessTimer: roundTime / 1000,\n      });\n\n      clearInterval(this.guessInterval);\n      this.guessInterval = undefined;\n      this.guessInterval = setInterval(() => {\n        const { guessTimer } = this.state;\n        if (guessTimer < 1) {\n          clearInterval(this.guessInterval);\n          this.guessInterval = undefined;\n          this.setState({\n            guessTimer: 0,\n          });\n          return;\n        }\n        this.setState({\n          guessTimer: guessTimer - 1,\n        });\n      }, 1000);\n    });\n\n    on('hostPlaySong', (data) => {\n      this.setState({\n        songToPlay: data,\n      });\n    });\n\n    on('playingSong', (data) => {\n      this.setState({\n        playing: data,\n      });\n    });\n  }\n\n  startGame() {\n    const { name } = this.state;\n    emit('hostStartGame', name);\n  }\n\n  resetGame() {\n    const { name } = this.state;\n    emit('hostResetGame', name);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  joinAsPlayer(nick, name) {\n    if (!nick.length) {\n      return;\n    }\n    emit('join', { nick, name });\n  }\n\n  joinAsHost() {\n    this.setState(\n      {\n        isHost: true,\n        hasHost: true,\n      },\n      () => emit('hostJoin'),\n    );\n  }\n\n  guess(uri) {\n    const { guessed, nickname, name } = this.state;\n    if (!guessed) {\n      this.setState(\n        {\n          guessed: true,\n        },\n        () => emit('guess', { uri, name, nickname }),\n      );\n    }\n  }\n\n  sendTime(time) {\n    this.setState({ timer: time }, () => emit('timer', time));\n  }\n\n  selectSong(song) {\n    const { name } = this.state;\n    this.setState(\n      {\n        selectedSong: true,\n      },\n      () => emit('selectedSong', { song, name }),\n    );\n  }\n\n  render() {\n    const {\n      name,\n      loading,\n      isLeader,\n      isHost,\n      hasHost,\n      players,\n      nickname,\n      started,\n      scores,\n      leader,\n      scoreUpdates,\n      guessTimer,\n      correctSong,\n      songToPlay,\n      guessed,\n      playing,\n    } = this.state;\n    if (loading) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n      <Layout isLeader={isLeader} isHost={isHost}>\n        <Game\n          name={name}\n          players={players}\n          scores={scores}\n          scoreUpdates={scoreUpdates}\n          isHost={isHost}\n          hasHost={hasHost}\n          nickname={nickname}\n          started={started}\n          guessTimer={guessTimer}\n          isLeader={isLeader}\n          leader={leader}\n          correctSong={correctSong}\n          songToPlay={songToPlay}\n          guessed={guessed}\n          playing={playing}\n          onStartGame={() => this.startGame()}\n          onJoinAsPlayer={(n, r) => this.joinAsPlayer(n, r)}\n          onJoinAsHost={() => this.joinAsHost()}\n          onGuess={uri => this.guess(uri)}\n          onSelectSong={song => this.selectSong(song)}\n          onChangeTimer={time => this.sendTime(time)}\n        />\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}